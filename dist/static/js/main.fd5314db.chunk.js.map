{"version":3,"sources":["components/Layouts/SignedInLinks.js","store/actions/authActions.js","components/Layouts/SignedOutLinks.js","components/Layouts/Navbar.js","components/Dashboard/Notifications.js","components/Projects/ProjectSummury.js","components/Projects/ProjectList.js","components/Dashboard/Dashboard.js","components/Projects/ProjectDetails.js","components/Auth/SignIn.js","components/Auth/SignUp.js","components/Projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/firebaseConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","Notifications","notifications","map","notification","key","id","user","caontent","moment","time","toDate","fromNow","ProjectSummary","project","format","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","content","SignIn","email","passowrd","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","password","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","response","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.fd5314db.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions'\n\n\nconst SignedInLinks = (props) => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to='/create'>New Project</NavLink></li>\n            <li><a onClick={props.signOut}>Log Out</a></li>\n            <li><NavLink to='/' className='btn btn-floating pink lighten-1'>{props.profile.initials}</NavLink></li>\n        </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\n","export const signIn = (credentials) => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: 'LOGIN_SUCCESS' })\n        }).catch((err) => {\n            dispatch({ type: 'LOGIN_ERROR', err })\n        })\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\n        })\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, { getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((response) => {\n            return firestore.collection('users').doc(response.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            })\n        }).then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS'})\n        }).catch((err) => {\n            dispatch({ type: 'SIGNUP_ERROR', err })\n        })\n    }\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to='/signup'>Signup</NavLink></li>\n            <li><NavLink to='/signin'>Login</NavLink></li>\n        </ul>\n    )\n}\n\nexport default SignedOutLinks;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux';\n\n\nconst NavBar = (props) => {\n    const { auth, profile } = props\n    // console.log('hhhhhh', auth)\n    const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks />\n    return (\n         <nav className=\"nav-wrapper grey darken-3\">\n             <div className=\"container\">\n                 <Link to='/' className=\"brand-logo\">MarioPlan</Link>\n                 { links }\n             </div>\n         </nav>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    console.log('hhhhhhh', state)\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(NavBar);\n","import React from 'react';\nimport moment from 'moment'\n\n\nconst Notifications = ({notifications}) => {\n    notifications && console.log('NOTIFICATIONS', notifications)\n    return (\n        <div className='section'>\n            <div className='card z-depth-0'>\n                <div className='card-content'>\n                    <span className='card-title'>\n                        Notifications\n                    </span>\n                    <ul className='notifications'>\n                        {\n                            notifications && notifications.map(notification => (\n                                // console.log('NOtifaications hhh', notification)\n                                <li key={notification.id}>\n                                    <span className='pink-text'>{notification && notification.user}</span>\n                                    <span>{ notification && notification.caontent}</span>\n                                    <div className='grey-text note-date'>\n                                        {moment(notification.time.toDate()).fromNow()}\n                                    </div>\n                                </li>\n                            ))\n                        }\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Notifications;\n","import React from 'react';\nimport moment from 'moment';\n\n\nconst ProjectSummary = ({ project }) => {\n    console.log('projects', moment(project).format('MMMM-Do-YYYY'))\n    return (\n        <div className=\"card z-depth-0 project-summary\">\n            <div className=\"card-content grey-text text-darken-3\">\n                <span className=\"card-title\">{project.title}</span>\n                <p>Posted by {`${project.authorFirstName} ${project.authorLastName}`}</p>\n                <p className=\"grey-text\">\n                    {\n                    project.createdAt &&\n                    moment(project.createdAt.toDate())\n                    .calendar()\n                    }\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport default ProjectSummary;\n","import React from 'react';\nimport ProjectSummary from './ProjectSummury';\nimport { Link } from 'react-router-dom';\n\n\nconst ProjectList = ({ projects }) => {\n    return (\n        <div className=\"project-list section\">\n            { projects && projects.map((project) => (\n                <Link to={`/project/${project.id}`} key={project.id}>\n                    <ProjectSummary project={project}/>\n                </Link>\n                \n            ))}\n        </div>\n        \n    )\n}\n\nexport default ProjectList;\n","import React, {Component} from 'react';\nimport Notifications from './Notifications';\nimport ProjectList from '../Projects/ProjectList';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\n\nclass Dashboard extends Component {\n    render (){\n        const { projects, auth, notifications } = this.props;\n\n        if(!auth.uid) return <Redirect to='/signin' />\n        return(\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects={projects}/>\n                    </div>\n                    <div className='col s12 m5 offset-m1'>\n                        <Notifications notifications={ notifications }/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    console.log('state', state)\n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications,\n    }  \n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects', orderBy: ['createdAt', 'desc']},\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\n    ])\n) (Dashboard);\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport moment from 'moment'\nimport { Redirect } from 'react-router-dom'\n\n\n\nconst ProjectDetails = (props) => {\n    const { project, auth } = props\n        if(!auth.uid) return <Redirect to='/signin'/>\n  return (\n    <>\n        <div className=\"container section project-details\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-container\">\n                    <span className=\"card-title\">{project && project.title}</span>\n                    <p>{project && project.content}</p>\n                </div>\n                <div className=\"card-action grey lighten-4 grey-text\">\n                    <div>{ project && `${project.authorFirstName} ${project.authorLastName}`}</div>\n                    <div> { project && project.createdAt && moment(project.createdAt.toDate()).calendar()}</div>\n                </div>\n            </div>\n        </div>\n    </>\n  )\n}\n\nconst mapStateToPros = (state, ownProps) => {\n    const { id } = ownProps.match.params\n    const projects = state.firestore.data.projects\n    const project = projects ? projects[id] : null\n    return {\n        project,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToPros),\n    firestoreConnect([\n        { collection: 'projects' }\n    ])\n)(ProjectDetails)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\n\nclass SignIn extends Component {\n    state={\n        email: '',\n        passowrd: '',\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.signIn(this.state)\n    }\n\n    render() {\n        const { authError, auth } = this.props\n        if(auth.uid) return <Redirect to='/'/>\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Signi In</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                        <div className=\"red-text center\">\n                            { authError && <p> { authError } </p>}\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/actions/authActions'\n\n\nclass SignUp extends Component {\n    state={\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: '',\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.signUp(this.state)\n    }\n\n    render() {\n        const { auth, authError } = this.props\n        if(auth.uid) return <Redirect to='/'/>\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">First name</label>\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">Last name</label>\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n                        <div className=\"red-text center\">\n                            { authError && <p> { authError } </p>}\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createProject } from '../../store/actions/projectActions'\nimport { Redirect } from 'react-router-dom'\n\n\nclass CreateProject extends Component {\n    state={\n        title: '',\n        content: '',\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        // console.log(this.state)\n        this.props.createProject(this.state)\n        this.props.history.push('/')\n    }\n\n    render() {\n        const { auth } = this.props\n        if(!auth.uid) return <Redirect to='/signin'/>\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Create new project</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Project Content</label>\n                        <textarea className=\"materialize-textarea\" id=\"content\" onChange={this.handleChange}></textarea>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create Project</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\n","export const createProject = (project) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        // async call to database\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile\n        const authorId = getState().firebase.auth.uid\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({ type: 'CREATE_PROJECT', project });\n        }).catch((err) => {\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err });\n        })\n        \n    }\n}","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport NavBar from './components/Layouts/Navbar'\nimport Dashboard from './components/Dashboard/Dashboard';\nimport ProjectDetails from './components/Projects/ProjectDetails';\nimport SignIn from './components/Auth/SignIn';\nimport SignUp from './components/Auth/SignUp';\nimport CreateProject from './components/Projects/CreateProject';\n\n\nclass App extends Component {\n  render () {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <NavBar />\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn}/>\n            <Route path='/signup' component={SignUp}/>\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n      \n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch(action.type){\n        case 'LOGIN_ERROR':\n            console.log('Login error')\n            return {\n                ...state,\n                authError: 'Login failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('Login success')\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('Signout success')\n            return state\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success')\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error')\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state\n    }\n}\n\nexport default authReducer;\n","const initState = {\n    projects: [\n        {\n            id: '1',\n            title: 'Help me find peach',\n            content: 'blah blah blah'\n        },\n\n        {\n            id: '2',\n            title: 'collect all the stars',\n            content: 'blah blah blah'\n        },\n\n        {\n            id: '3',\n            title: 'amazing love',\n            content: 'blah blah blah'\n        }\n    ]\n}\n\nconst projectReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'CREATE_PROJECT':\n            console.log('created project', action.project);\n            return state\n        case 'CREATE_PROJECT_ERROR':\n            console.log('create project error', action.err)\n            return state\n        default:\n            return state\n    }\n}\n\nexport default projectReducer;\n","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer,\n})\n\nexport default rootReducer;\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAjNHf9S-Syy6F_lhZWHw4llsMbSx8HfZM\",\n    authDomain: \"joe-marioplan.firebaseapp.com\",\n    databaseURL: \"https://joe-marioplan.firebaseio.com\",\n    projectId: \"joe-marioplan\",\n    storageBucket: \"joe-marioplan.appspot.com\",\n    messagingSenderId: \"822810286817\",\n    appId: \"1:822810286817:web:c147b84d0bfe78060875a0\",\n    measurementId: \"G-RBL7S6426X\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  // firebase.analytics(firebaseConfig);\n  firebase.firestore().settings({ timestampsInSnapshots: true });\n\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/firebaseConfig';\n\n\nconst store  = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {\n      useFirestoreForProfile: true,\n      userProfile: 'users',\n      attachAuthIsReady: true })\n  ))\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n})\n"],"sourceRoot":""}